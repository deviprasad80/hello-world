::: {.d-flex .flex-column .flex-md-row .gh-header}
Configuration {#configuration .flex-auto .min-width-0 .mb-2 .mb-md-0 .mr-0 .mr-md-2 .gh-header-title .instapaper_title}
=============

::: {.mt-0 .mt-lg-1 .flex-shrink-0 .gh-header-actions}
[Jump to bottom](#wiki-pages-box){.d-md-none}
:::
:::

::: {.mt-2 .mt-md-1 .pb-3 .gh-header-meta}
Taoyu Li edited this page Jan 23, 2018 ┬╖ [11
revisions](/Azure/SONiC/wiki/Configuration/_history){.muted-link}
:::

::: {#wiki-content .d-flex .flex-column .flex-md-row}
::: {#wiki-body .mt-4 .flex-auto .min-width-0 .gollum-markdown-content .instapaper_body}
::: {.markdown-body}
SONiC is managing configuration in a single source of truth - a redisDB
instance that we refer as ConfigDB. Applications subscribe to ConfigDB
and generate their running configuration correspondingly.

(Before Sep 2017, we were using an XML file named minigraph.xml to
configure SONiC devices. For historical documentation, please refer to
[Configuration with
Minigraph](https://github.com/Azure/SONiC/wiki/Configuration-with-Minigraph-(~Sep-2017)))

[](#config-load-and-save){#user-content-config-load-and-save .anchor}Config Load and Save
=========================================================================================

In current version of SONiC, ConfigDB is implemented as database 4 of
local redis. When system boots, configurations will be loaded from
`/etc/sonic/config_db.json` file into redis. Please note that ConfigDB
content won\'t be written back into `/etc/sonic/config_db.json` file
automatically. In order to do that, a `config save` command need to be
manually executed from CLI. Similarly, `config load` will trigger a
force load of json file into DB. Generally, content in
`/etc/sonic/config_db.json` can be considered as starting config, and
content in redisDB running config.

We keep a way to load configuration from minigraph and write into
ConfigDB for backward compatibility. To do that, run
`config load_minigraph`.

### [](#incremental-configuration){#user-content-incremental-configuration .anchor}Incremental Configuration

The design of ConfigDB supports incremental configuration - application
could subscribe to changes in ConfigDB and response correspondingly.
However, this feature is not implemented by all applications yet. By Sep
2017 now, the only application that supports incremental configuration
is BGP (docker-fpm-quagga). For other applications, a manual restart is
required after configuration changes in ConfigDB.

[](#redis-and-json-schema){#user-content-redis-and-json-schema .anchor}Redis and Json Schema
============================================================================================

ConfigDB uses a table-object schema that is similar with
[AppDB](https://github.com/Azure/sonic-swss/blob/4c56d23b9ff4940bdf576cf7c9e5aa77adcbbdcc/doc/swss-schema.md),
and `config_db.json` is a straight-forward serialization of DB. As an
example, the following fragments could be BGP-related configuration in
redis and json, correspondingly:

        127.0.0.1:6379[4]> keys BGP_NEIGHBOR:*
         1) "BGP_NEIGHBOR:10.0.0.31"
         2) "BGP_NEIGHBOR:10.0.0.39"
         3) "BGP_NEIGHBOR:10.0.0.11"
         4) "BGP_NEIGHBOR:10.0.0.7"
         ...

        127.0.0.1:6379[4]> hgetall BGP_NEIGHBOR:10.0.0.3
        1) "admin_status"
        2) "up"
        3) "peer_addr"
        4) "10.0.0.2"
        5) "asn"
        6) "65200"
        7) "name"
        8) "ARISTA07T2"

        "BGP_NEIGHBOR": {
            "10.0.0.61": {
                "local_addr": "10.0.0.60",
                "asn": 64015,
                "name": "ARISTA15T0"
            },
            "10.0.0.49": {
                "local_addr": "10.0.0.48",
                "asn": 64009,
                "name": "ARISTA09T0"
            },
           ...
        }

Full sample config\_db.json files are availables at
[here](https://github.com/Azure/SONiC/blob/gh-pages/doc/config_db.json)
and
[here](https://github.com/Azure/SONiC/blob/gh-pages/doc/config_db_t0.json).

### [](#device-metadata){#user-content-device-metadata .anchor}Device Metadata

The **DEVICE\_METADATA** table contains only one object named
*localhost*. In this table the device metadata such as hostname, hwsku,
deployment envionment id and deployment type are specified. BGP local AS
number is also specified in this table as current only single BGP
instance is supported in SONiC.

        "DEVICE_METADATA": {
            "localhost": {
                "bgp_asn": 65100,
                "deployment_id": null,
                "hostname": "switch1",
                "type": "LeafRouter",
                "hwsku": "Force10-S6000",
                "mac": ""90:b1:1c:f4:a8:51"
            }
        },

### [](#port){#user-content-port .anchor}Port

In this table the physical port configurations are defined. Each object
will have port name as its key, and port name alias and port speed as
optional attributes.

        "PORT": {
            "Ethernet0": {
                "alias": "fortyGigE0/0",
                "speed": "40000"
            },
            "Ethernet4": {
                "alias": "fortyGigE0/4"
            },
            "Ethernet8": {
                "alias": "fortyGigE0/8"
            },
            ...
        }

### [](#port-channel){#user-content-port-channel .anchor}Port Channel

Port channels are defined in **PORTCHANNEL** table with port channel
name as object key and member list as attribute.

        "PORTCHANNEL": {
            "PortChannel02": {
                "members": [
                    "Ethernet116"
                ]
            },
            "PortChannel01": {
                "members": [
                    "Ethernet112"
                ]
            },
        },

### [](#vlan){#user-content-vlan .anchor}VLAN

This table is where VLANs are defined. VLAN name is used as object key,
and member list as well as an integer id are defined as attributes. If a
DHCP relay is required for this VLAN, a `dhcp_servers` attribute must be
specified for that VLAN, the value of which is a list that must contain
the domain name or IP address of one or more DHCP servers.

        "VLAN": {
            "Vlan1000": {
                "dhcp_servers": [
                    "192.0.0.1",
                    "192.0.0.2",
                    "192.0.0.3",
                    "192.0.0.4"
                ],
                "members": [
                    "Ethernet0",
                    "Ethernet4",
                    "Ethernet8",
                    "Ethernet12"
                ],
                "vlanid": "1000"
            }
        },

### [](#vlan_member){#user-content-vlan_member .anchor}VLAN\_MEMBER

VLAN member table has Vlan name together with physical port or port
channel name as object key, and tagging mode as attributes.

        "VLAN_MEMBER": {
            "Vlan1000|PortChannel47": {
                "tagging_mode": "untagged"
            },
            "Vlan1000|Ethernet8": {
                "tagging_mode": "untagged"
            },
            "Vlan2000|PortChannel47": {
                "tagging_mode": "tagged"
            }
        },

### [](#data-plane-l3-interfaces){#user-content-data-plane-l3-interfaces .anchor}Data Plane L3 Interfaces

IP configuration for data plane are defined in **INTERFACE**,
**PORTCHANNEL\_INTERFACE**, and **VLAN\_INTERFACE** table. The objects
in all three tables have the interface (could be physical port, port
channel, or vlan) that IP address is attached to as first-level key, and
IP prefix as second-level key. IP interface objects don\'t have any
attributes.

        "INTERFACE": {
            "Ethernet0|10.0.0.0/31": {},
            "Ethernet4|10.0.0.2/31": {},
            "Ethernet8|10.0.0.4/31": {},
            ...
        },
        "PORTCHANNEL_INTERFACE": {
            "PortChannel01|10.0.0.56/31": {},
            "PortChannel01|FC00::71/126": {},
            "PortChannel02|10.0.0.58/31": {},
            "PortChannel02|FC00::75/126": {}
            ...
        },
        "VLAN_INTERFACE": {
            "Vlan1000|192.168.0.1/27": {}
        },

### [](#loopback-interface){#user-content-loopback-interface .anchor}Loopback Interface

Loopback interface configuration lies in **LOOPBACK\_INTERFACE** table
and has similar schema with data plane interfaces. The loopback device
name and loopback IP prefix act as multi-level key for loopback
interface objects.

        "LOOPBACK_INTERFACE": {
            "Loopback0|10.1.0.32/32": {},
            "Loopback0|FC00:1::32/128": {}
        },

### [](#management-interface){#user-content-management-interface .anchor}Management Interface

Management interfaces are defined in **MGMT\_INTERFACE** table. Object
key is composed of management interface name and IP prefix. Attribute
***gwaddr*** specify the gateway address of the prefix.
***forced\_mgmt\_routes*** attribute can be used to specify addresses /
prefixes traffic to which are forced to go through management network
instead of data network.

        "MGMT_INTERFACE": {
            "eth0|10.3.100.3/23": {
                "forced_mgmt_routes": [
                    "10.0.10.0/29",
                    "10.0.20.5"
                ],
                "gwaddr": "10.3.100.1"
            }
        },

### [](#bgp-sessions){#user-content-bgp-sessions .anchor}BGP Sessions

BGP session configuration is defined in **BGP\_NEIGHBOR** table. BGP
neighbor address is used as key of bgp neighbor objects. Object
attributes include remote AS number, neighbor router name, and local
peering address. Dynamic neighbor is also supported by defining peer
group name and IP ranges in **BGP\_PEER\_RANGE** table.

        "BGP_NEIGHBOR": {
            "10.0.0.61": {
                "local_addr": "10.0.0.60",
                "asn": 64015,
                "name": "ARISTA15T0"
            },
            "10.0.0.49": {
                "local_addr": "10.0.0.48",
                "asn": 64009,
                "name": "ARISTA09T0"
            },
            ...
        },
        "BGP_PEER_RANGE": {
            "PeerGroup": {
                "name": "PeerGroup",
                "ip_range": [
                    "192.168.0.0/27"
                ]
            }
        },

### [](#l2-neighbors){#user-content-l2-neighbors .anchor}L2 Neighbors

The L2 neighbor and connection information can be configured in
**DEVICE\_NEIGHBOR** table. Those information are used mainly for LLDP.
While mandatory fields include neighbor name acting as object key and
remote port / local port information in attributes, optional information
about neighbor device such as device type, hwsku, management address and
loopback address can also be defined.

        "DEVICE_NEIGHBOR": {
            "ARISTA04T1": {
                "mgmt_addr": "10.20.0.163",
                "hwsku": "Arista",
                "lo_addr": null,
                "local_port": "Ethernet124",
                "type": "LeafRouter",
                "port": "Ethernet1"
            },
            "ARISTA03T1": {
                "mgmt_addr": "10.20.0.162",
                "hwsku": "Arista",
                "lo_addr": null,
                "local_port": "Ethernet120",
                "type": "LeafRouter",
                "port": "Ethernet1"
            },
            "ARISTA02T1": {
                "mgmt_addr": "10.20.0.161",
                "hwsku": "Arista",
                "lo_addr": null,
                "local_port": "Ethernet116",
                "type": "LeafRouter",
                "port": "Ethernet1"
            },
            "ARISTA01T1": {
                "mgmt_addr": "10.20.0.160",
                "hwsku": "Arista",
                "lo_addr": null,
                "local_port": "Ethernet112",
                "type": "LeafRouter",
                "port": "Ethernet1"
            }
        },

### [](#ntp-and-syslog-servers){#user-content-ntp-and-syslog-servers .anchor}NTP and SYSLOG servers

These information are configured in individual tables. Domain name or IP
address of the server is used as object key. Currently there are no
attributes in those objects.

        "NTP_SERVER": {
            "2.debian.pool.ntp.org": {},
            "1.debian.pool.ntp.org": {},
            "3.debian.pool.ntp.org": {},
            "0.debian.pool.ntp.org": {}
        },
        "SYSLOG_SERVER": {}∩╝î

### [](#acl-and-mirroring){#user-content-acl-and-mirroring .anchor}ACL and Mirroring

ACL and mirroring related configuration are defined in
**MIRROR\_SESSION**, **ACL\_TABLE** and **ACL\_RULE** tables. Those
tables are in progress of migrating from APPDB. Please refer to their
schema in APPDB
[here](https://github.com/Azure/sonic-swss/blob/4c56d23b9ff4940bdf576cf7c9e5aa77adcbbdcc/doc/swss-schema.md)
and migration plan
[here](https://github.com/Azure/SONiC/wiki/ACL-Configuration-Requirement-Description).

        "MIRROR_SESSION": {
            "everflow0": {
                "src_ip": "10.1.0.32",
                "dst_ip": "2.2.2.2"
            }
        },
        "ACL_TABLE": {
             "DATAACL": {
                "policy_desc" : "data_acl",
                "type": "l3",
                "ports": [
                    "Ethernet0",
                    "Ethernet4",
                    "Ethernet8",
                    "Ethernet12"
                ]
            }
        },

### [](#virtual-router){#user-content-virtual-router .anchor}Virtual router

The virtual router table allows to insert or update a new virtual router
instance. The key of the instance is its name. The attributes in the
table allow to change properties of a virtual router. Attributes:

-   \'v4\' contains boolean value \'true\' or \'false\'. Enable or
    disable IPv4 in the virtual router
-   \'v6\' contains boolean value \'true\' or \'false\'. Enable or
    disable IPv6 in the virtual router
-   \'src\_mac\' contains MAC address. What source MAC address will be
    used for packets egressing from the virtual router
-   \'ttl\_action\' contains packet action. Defines the action for
    packets with TTL == 0 or TTL == 1
-   \'ip\_opt\_action\' contains packet action. Defines the action for
    packets with IP options
-   \'l3\_mc\_action\' contains packet action. Defines the action for
    unknown L3 multicast packets

The packet action could be:

-   \'drop\'
-   \'forward\'
-   \'copy\'
-   \'copy\_cancel\'
-   \'trap\'
-   \'log\'
-   \'deny\'
-   \'transit\'

<!-- -->

        'VRF:rid1': {
            'v4': 'true',
            'v6': 'false',
            'src_mac': '02:04:05:06:07:08',
            'ttl_action': 'copy',
            'ip_opt_action': 'deny',
            'l3_mc_action': 'drop'
        }

[](#for-developers){#user-content-for-developers .anchor}For Developers
=======================================================================

[](#generating-application-config-by-jinja2-template){#user-content-generating-application-config-by-jinja2-template .anchor}Generating Application Config by Jinja2 Template
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

To be added.

[](#incremental-configuration-by-subscribing-to-configdb){#user-content-incremental-configuration-by-subscribing-to-configdb .anchor}Incremental Configuration by Subscribing to ConfigDB
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Detail instruction to be added. A sample could be found in this
[PR](https://github.com/Azure/sonic-buildimage/pull/861) that
implemented dynamic configuration for BGP.
:::
:::

::: {#wiki-rightbar .mt-4 .ml-md-6 .flex-shrink-0 .width-full .wiki-rightbar}
::: {#wiki-pages-box .mb-4 .wiki-pages-box .js-wiki-pages-box role="navigation"}
::: {.Box .Box--condensed .box-shadow}
::: {.Box-header .js-wiki-toggle-collapse style="cursor: pointer"}
### Pages [89]{.Counter .Counter--gray} {#pages-89 .Box-title}
:::

::: {.d-none .js-wiki-sidebar-toggle-display}
::: {.filter-bar}
:::

-   **[Home](/Azure/SONiC/wiki){.d-block}**
-   **[ACL Configuration High Level
    Design](/Azure/SONiC/wiki/ACL-Configuration-High-Level-Design){.d-block}**
-   **[ACL Configuration Requirement
    Description](/Azure/SONiC/wiki/ACL-Configuration-Requirement-Description){.d-block}**
-   **[ACL High Level
    Design](/Azure/SONiC/wiki/ACL-High-Level-Design){.d-block}**
-   **[ACL test plan](/Azure/SONiC/wiki/ACL-test-plan){.d-block}**
-   **[Arch Spec
    Guidelines](/Azure/SONiC/wiki/Arch-Spec-Guidelines){.d-block}**
-   **[Architecture](/Azure/SONiC/wiki/Architecture){.d-block}**
-   **[Asymmetric PFC High Level
    Design](/Azure/SONiC/wiki/Asymmetric-PFC-High-Level-Design){.d-block}**
-   **[Becoming a
    contributor](/Azure/SONiC/wiki/Becoming-a-contributor){.d-block}**
-   **[BGP GR helper mode test
    plan](/Azure/SONiC/wiki/BGP-GR-helper-mode-test-plan){.d-block}**
-   **[BGP MP test plan](/Azure/SONiC/wiki/BGP-MP-test-plan){.d-block}**
-   **[Buffers Configuration Update
    design](/Azure/SONiC/wiki/Buffers-Configuration-Update-design){.d-block}**
-   **[Build Broadcom Opennsl and
    SAI](/Azure/SONiC/wiki/Build-Broadcom-Opennsl-and-SAI){.d-block}**
-   **[Building Guide](/Azure/SONiC/wiki/Building-Guide){.d-block}**
-   **[Command
    Reference](/Azure/SONiC/wiki/Command-Reference){.d-block}**
-   **[Community
    Meetings](/Azure/SONiC/wiki/Community-Meetings){.d-block}**
-   **[Configuration](/Azure/SONiC/wiki/Configuration){.d-block}**
-   **[Configuration with Minigraph
    (\~Sep 2017)](/Azure/SONiC/wiki/Configuration-with-Minigraph-(~Sep-2017)){.d-block}**
-   **[Converting old or creating new buffers
    config](/Azure/SONiC/wiki/Converting-old-or-creating-new-buffers-config){.d-block}**
-   **[Critical Resource Monitoring High Level
    Design](/Azure/SONiC/wiki/Critical-Resource-Monitoring-High-Level-Design){.d-block}**
-   **[CRM test plan](/Azure/SONiC/wiki/CRM-test-plan){.d-block}**
-   **[Design
    Guidelines](/Azure/SONiC/wiki/Design-Guidelines){.d-block}**
-   **[Developing Guide](/Azure/SONiC/wiki/Developing-Guide){.d-block}**
-   **[DHCP Relay Agent Test
    Plan](/Azure/SONiC/wiki/DHCP-Relay-Agent-Test-Plan){.d-block}**
-   **[ECMP and LAG Hash
    Seed](/Azure/SONiC/wiki/ECMP-and-LAG-Hash-Seed){.d-block}**
-   **[ECN WRED configuration
    utility](/Azure/SONiC/wiki/ECN-WRED-configuration-utility){.d-block}**
-   **[Enable ECN on lossless
    queues](/Azure/SONiC/wiki/Enable-ECN-on-lossless-queues){.d-block}**
-   **[Everflow High Level
    Design](/Azure/SONiC/wiki/Everflow-High-Level-Design){.d-block}**
-   **[Everflow test
    plan](/Azure/SONiC/wiki/Everflow-test-plan){.d-block}**
-   **[FAQ](/Azure/SONiC/wiki/FAQ){.d-block}**
-   **[Fast Reboot](/Azure/SONiC/wiki/Fast-Reboot){.d-block}**
-   **[FDB Scale Test
    Plan](/Azure/SONiC/wiki/FDB-Scale-Test-Plan){.d-block}**
-   **[Feature arch spec
    guidelines](/Azure/SONiC/wiki/Feature-arch-spec-guidelines){.d-block}**
-   **[FIB Scale Test
    Plan](/Azure/SONiC/wiki/FIB-Scale-Test-Plan){.d-block}**
-   **[Generate Minigraph File Based On Testbed
    Type](/Azure/SONiC/wiki/Generate-Minigraph-File-Based-On-Testbed-Type){.d-block}**
-   **[How to breakout a
    port](/Azure/SONiC/wiki/How-to-breakout-a-port){.d-block}**
-   **[How to Change the
    Password](/Azure/SONiC/wiki/How-to-Change-the-Password){.d-block}**
-   **[How to Check SNMP
    Configuration](/Azure/SONiC/wiki/How-to-Check-SNMP-Configuration){.d-block}**
-   **[How to Clear MAC
    table](/Azure/SONiC/wiki/How-to-Clear-MAC-table){.d-block}**
-   **[How to Deploy
    SONiC](/Azure/SONiC/wiki/How-to-Deploy-SONiC){.d-block}**
-   **[How To Reset
    Password](/Azure/SONiC/wiki/How-To-Reset-Password){.d-block}**
-   **[How to Use Mellanox SDK Debug
    Utilities](/Azure/SONiC/wiki/How-to-Use-Mellanox-SDK-Debug-Utilities){.d-block}**
-   **[How to Use SAI
    Player](/Azure/SONiC/wiki/How-to-Use-SAI-Player){.d-block}**
-   **[HOWTO compile and run sai server
    docker](/Azure/SONiC/wiki/HOWTO-compile-and-run-sai-server-docker){.d-block}**
-   **[HOWTO Reset syncd
    docker](/Azure/SONiC/wiki/HOWTO-Reset-syncd-docker){.d-block}**
-   **[HOWTO write a PTF
    Test](/Azure/SONiC/wiki/HOWTO-write-a-PTF-Test){.d-block}**
-   **[IPv4 Decapsulation
    test](/Azure/SONiC/wiki/IPv4-Decapsulation-test){.d-block}**
-   **[L2 Switch mode](/Azure/SONiC/wiki/L2-Switch-mode){.d-block}**
-   **[LAG Feature Test
    Suite](/Azure/SONiC/wiki/LAG-Feature-Test-Suite){.d-block}**
-   **[LogAnalyzer](/Azure/SONiC/wiki/LogAnalyzer){.d-block}**
-   **[Manual for Enable SONiC L2 Mode on MSN2700 with Minimum
    ConfigDB](/Azure/SONiC/wiki/Manual-for-Enable-SONiC-L2-Mode-on-MSN2700-with-Minimum-ConfigDB){.d-block}**
-   **[Mellanox SDK and PRM Sniffer Utility CLI Design for
    SONiC](/Azure/SONiC/wiki/Mellanox-SDK-and-PRM-Sniffer-Utility-CLI-Design-for-SONiC){.d-block}**
-   **[MMU Allocation](/Azure/SONiC/wiki/MMU-Allocation){.d-block}**
-   **[OCP Summit 2018 and SONiC SAI Workshop Slide
    Collection](/Azure/SONiC/wiki/OCP-Summit-2018--and-SONiC-SAI-Workshop-Slide-Collection){.d-block}**
-   **[OS10 SONiC](/Azure/SONiC/wiki/OS10-SONiC){.d-block}**
-   **[PFC and Queue SNMP counters High Level
    Design](/Azure/SONiC/wiki/PFC-and-Queue-SNMP-counters-High-Level-Design){.d-block}**
-   **[PFC Watchdog](/Azure/SONiC/wiki/PFC-Watchdog){.d-block}**
-   **[PFC Watchdog
    Design](/Azure/SONiC/wiki/PFC-Watchdog-Design){.d-block}**
-   **[PFC Watchdog Test
    Plan](/Azure/SONiC/wiki/PFC-Watchdog-Test-Plan){.d-block}**
-   **[Port Breakout and Speed
    Requirements](/Azure/SONiC/wiki/Port-Breakout-and-Speed-Requirements){.d-block}**
-   **[Port Breakout High Level
    Design](/Azure/SONiC/wiki/Port-Breakout-High-Level-Design){.d-block}**
-   **[Port Configuration Utility High Level
    Design](/Azure/SONiC/wiki/Port-Configuration-Utility-High-Level-Design){.d-block}**
-   **[Port Speed
    Configuration](/Azure/SONiC/wiki/Port-Speed-Configuration){.d-block}**
-   **[Porting Guide](/Azure/SONiC/wiki/Porting-Guide){.d-block}**
-   **[QoS configuration in Config DB. ECN WRED configuration utility
    test
    plan](/Azure/SONiC/wiki/QoS-configuration-in-Config-DB.-ECN-WRED-configuration-utility-test-plan){.d-block}**
-   **[Quick Start](/Azure/SONiC/wiki/Quick-Start){.d-block}**
-   **[Router
    Advertiser](/Azure/SONiC/wiki/Router-Advertiser){.d-block}**
-   **[Run Time Buffers Configuration Update
    design](/Azure/SONiC/wiki/Run-Time-Buffers-Configuration-Update-design){.d-block}**
-   **[SNMP lldpLocManAddrTable and lldpRemManAddrTable
    design](/Azure/SONiC/wiki/SNMP-lldpLocManAddrTable-and-lldpRemManAddrTable-design){.d-block}**
-   **[SONiC Clear FDB CLI
    Design](/Azure/SONiC/wiki/SONiC-Clear-FDB-CLI-Design){.d-block}**
-   **[SONiC P4 Software
    Switch](/Azure/SONiC/wiki/SONiC-P4-Software-Switch){.d-block}**
-   **[SONiC Pre Summit Workshop and Hackathon
    2019](/Azure/SONiC/wiki/SONiC-Pre-Summit-Workshop-and-Hackathon-2019){.d-block}**
-   **[Sonic Roadmap
    Planning](/Azure/SONiC/wiki/Sonic-Roadmap-Planning){.d-block}**
-   **[SONiC SMMP Design on Management
    Ports](/Azure/SONiC/wiki/SONiC-SMMP-Design-on-Management-Ports){.d-block}**
-   **[SONiC to SONiC
    update](/Azure/SONiC/wiki/SONiC-to-SONiC-update){.d-block}**
-   **[sonic version](/Azure/SONiC/wiki/sonic-version){.d-block}**
-   **[SONiC Workshop in Beijing Oct
    2018](/Azure/SONiC/wiki/SONiC-Workshop-in-Beijing-Oct-2018){.d-block}**
-   **[SONiC Workshop on OCP Summit
    2016](/Azure/SONiC/wiki/SONiC-Workshop-on-OCP-Summit-2016){.d-block}**
-   **[SSD Health design
    (Draft)](/Azure/SONiC/wiki/SSD-Health-design-(Draft)){.d-block}**
-   **[Supported Devices and
    Platforms](/Azure/SONiC/wiki/Supported-Devices-and-Platforms){.d-block}**
-   **[Testing Guide](/Azure/SONiC/wiki/Testing-Guide){.d-block}**
-   **[The PSU CLI and SNMP
    support](/Azure/SONiC/wiki/The-PSU-CLI-and-SNMP-support){.d-block}**
-   **[Troubleshooting
    Guide](/Azure/SONiC/wiki/Troubleshooting-Guide){.d-block}**
-   **[Upgrade SONiC to Debian
    9](/Azure/SONiC/wiki/Upgrade-SONiC-to-Debian-9){.d-block}**
-   **[Upgrading SONiC kernel to 3.16.0ΓÇÉ5 or later
    versions](/Azure/SONiC/wiki/Upgrading-SONiC-kernel-to-3.16.0%E2%80%905-or-later-versions){.d-block}**
-   **[Use routeresync to Swap the Routing
    Stack](/Azure/SONiC/wiki/Use-routeresync-to-Swap-the-Routing-Stack){.d-block}**
-   **[Using swssconfig to apply
    configuration](/Azure/SONiC/wiki/Using-swssconfig-to-apply-configuration){.d-block}**
-   **[VLAN Feature Test
    Suite](/Azure/SONiC/wiki/VLAN-Feature-Test-Suite){.d-block}**
-   **[VLAN trunk test
    plan](/Azure/SONiC/wiki/VLAN-trunk-test-plan){.d-block}**
-   Show 74 more pages...
:::
:::
:::

::: {.gollum-markdown-content}
::: {.Box .Box--condensed .mb-4}
::: {.Box-body .wiki-custom-sidebar .markdown-body}
-   [Home](/Azure/SONiC/wiki/Home){.internal .present}
-   [FAQ](/Azure/SONiC/wiki/FAQ){.internal .present}
-   For Users
    -   [Quick Start](/Azure/SONiC/wiki/Quick-Start){.internal .present}
    -   [Supported Devices and
        Platforms](/Azure/SONiC/wiki/Supported-Devices-and-Platforms){.internal
        .present}
    -   [SONiC P4 Software
        Switch](/Azure/SONiC/wiki/SONiC-P4-Software-Switch){.internal
        .present}
    -   [Configuration](/Azure/SONiC/wiki/Configuration){.internal
        .present}
    -   [Command
        Reference](/Azure/SONiC/wiki/Command-Reference){.internal
        .present}
    -   [Troubleshooting
        Guide](/Azure/SONiC/wiki/Troubleshooting-Guide){.internal
        .present}
-   For Developers
    -   [Becoming a
        Contributor](/Azure/SONiC/wiki/Becoming-a-contributor){.internal
        .present}
    -   [Architecture](/Azure/SONiC/wiki/Architecture){.internal
        .present}
    -   [Building Guide](/Azure/SONiC/wiki/Building-Guide){.internal
        .present}
    -   [Porting Guide](/Azure/SONiC/wiki/Porting-Guide){.internal
        .present}
    -   [Testing Guide](/Azure/SONiC/wiki/Testing-Guide){.internal
        .present}
    -   [Developing Guide](/Azure/SONiC/wiki/Developing-Guide){.internal
        .present}
-   [Sonic Roadmap
    Planning](/Azure/SONiC/wiki/Sonic-Roadmap-Planning){.internal
    .present}
-   [Report Issues](https://github.com/Azure/SONiC/issues)
-   Presentations
    -   [OCP Summit
        2016](files/talks/SAI-SONiC-OCP-Summit-Mar16-shared.pdf)
    -   [OCP Summit
        2017](https://www.youtube.com/watch?v=DvFTCpwnUQ4&feature=youtu.be)
-   [Community
    Meetings](https://github.com/Azure/SONiC/wiki/Community-Meetings)
-   Join Us
    -   [Mailing
        list](https://groups.google.com/forum/#!forum/sonicproject)
    -   [Slack
        discussion](https://groups.google.com/forum/#!forum/sonicproject)
:::
:::
:::

##### Clone this wiki locally {#clone-this-wiki-locally .mt-0 .mb-2}

::: {.width-full .input-group}
:::
:::
:::
:::

::: {.modal-backdrop .js-touch-events}
:::
:::
:::

::: {.footer .container-lg .width-full .p-responsive role="contentinfo"}
::: {.position-relative .d-flex .flex-row-reverse .flex-lg-row .flex-wrap .flex-lg-nowrap .flex-justify-center .flex-lg-justify-between .pt-6 .pb-2 .mt-6 .f6 .text-gray .border-top .border-gray-light}
-   ┬⌐ 2019 [GitHub]{title="0.32027s from unicorn-9995b4cb5-vbtrv"}, Inc.
-   [Terms](https://github.com/site/terms)
-   [Privacy](https://github.com/site/privacy)
-   [Security](https://github.com/security)
-   [Status](https://githubstatus.com/)
-   [Help](https://help.github.com)

<!-- -->

-   [Contact GitHub](https://github.com/contact)
-   [Pricing](https://github.com/pricing)
-   [API](https://developer.github.com)
-   [Training](https://training.github.com)
-   [Blog](https://github.blog)
-   [About](https://github.com/about)
:::

::: {.d-flex .flex-justify-center .pb-6}
[]{.f6 .text-gray-light}
:::
:::

::: {#ajax-error-message .ajax-error-message .flash .flash-error}
You can't perform that action at this time.
:::

::: {.js-stale-session-flash .stale-session-flash .flash .flash-warn .flash-banner hidden=""}
[You signed in with another tab or window. [Reload]() to refresh your
session.]{.signed-in-tab-flash} [You signed out in another tab or
window. [Reload]() to refresh your session.]{.signed-out-tab-flash}
:::

::: {.octocat-spinner .my-6 .js-details-dialog-spinner}
:::

::: {.Popover .js-hovercard-content .position-absolute style="display: none; outline: none;" tabindex="0"}
::: {.Popover-message .Popover-message--bottom-left .Popover-message--large .Box .box-shadow-large style="width:360px;"}
:::
:::

::: {.js-global-screen-reader-notice .sr-only aria-live="polite"}
:::
:::
:::
:::
